<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--    掃描控制層組件-->
    <context:component-scan base-package="com.example.ssm.controller"/>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

<!--    配置默認的servlet 處理靜態資源
        當前工程的web.xml配置的前端控制器 DispatcherServlet 的url-pattern是 /
        tomcat 的web.xml配置的 DefaultServlet 的url-pattern也是 /
        此時瀏覽器發送的請求會優先被 DispatcherServlet 進行處理，但是 DispatcherServlet 無法處理靜態資源
        若配置了 <mvc:default-servlet-handler/> 此時瀏覽器發送的所有請求都會被 DefaultServlet 處理
        若配置了 <mvc:default-servlet-handler/> 和 <mvc:annotation-driven/>
        發送的請求會優先被 DispatcherServlet 進行處理，無法處理靜態資源則由 DefaultServlet 處理
-->

    <mvc:default-servlet-handler/>
<!--    開啟mvc 註解驅動-->
    <mvc:annotation-driven/>
    <!--
        path：设置处理的请求地址 view-name：设置请求地址所对应的视图名称
        視圖控制器: 為當前的請求直接設置視圖名稱實現頁面跳轉
    -->
    <mvc:view-controller path="/" view-name="index"/>
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--&lt;!&ndash;                key 設置要處理的異常 ,value 設置出現該異常時要跳轉的頁面所對應的邏輯試圖&ndash;&gt;-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--&lt;!&ndash;        設置共享在請求域中的異常信息的屬性名&ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ex"/>-->
<!--    </bean>-->
</beans>